"use strict";function CarrinhosController(r,o,e,a){r.curPage=1,r.pageSize=12;var t={headers:{Authorization:localStorage.getItem("token"),Site:localStorage.getItem("site")}};r.load=function(){a.get($('meta[name="api"]').attr("content")+"carrinho?page="+r.curPage+"&limit="+r.pageSize,t).then(function(o){r.linhas=o.data,r.total=0;for(var e=new Array,a=1;a<=o.data.pageCount;a++)e.push(a);r.paginas=e,$('[data-toggle="tooltip"]').tooltip()})},r.open=function(o){r.carrinho=o,$("#cartModal").modal("show")},r.check=function(o){r.carrinho=o,alert("carrinho atualizado")},r["delete"]=function(o){confirm("Você deseja realmente apagar o carrinho?\nEste procedimento é irreversível!")&&a["delete"]($('meta[name="api"]').attr("content")+"carrinho/"+o,t).then(function(o){204==o.status?(r.status={type:"success",message:"carrinho removido com sucesso!"},r.load()):r.status={type:"danger",message:"Erro removendo carrinho, tente novamente mais tarde"}})}}angular.module("myApp.carrinhos",["ngRoute","angular-cloudinary"]).config(["$routeProvider",function(r){r.when("/carrinhos",{templateUrl:"modules/carrinhos/index.html",controller:"CarrinhosController"}).when("/carrinhos/adicionar",{templateUrl:"modules/carrinhos/add.html",controller:"CarrinhosController"}).when("/carrinhos/editar/:id",{templateUrl:"modules/carrinhos/edit.html",controller:"CarrinhosController"})}]).controller("CarrinhosController",["$scope","$routeParams","$location","$http","cloudinary",CarrinhosController]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvY2FycmluaG9zL2luZGV4LmpzIl0sIm5hbWVzIjpbIkNhcnJpbmhvc0NvbnRyb2xsZXIiLCIkc2NvcGUiLCIkcm91dGVQYXJhbXMiLCIkbG9jYXRpb24iLCIkaHR0cCIsImN1clBhZ2UiLCJwYWdlU2l6ZSIsImNvbmZpZyIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIlNpdGUiLCJsb2FkIiwiZ2V0IiwiJCIsImF0dHIiLCJ0aGVuIiwicmVzdWx0IiwibGluaGFzIiwidG90YWwiLCJwYWdpbmFzIiwiQXJyYXkiLCJpIiwiZGF0YSIsInBhZ2VDb3VudCIsInB1c2giLCJ0b29sdGlwIiwib3BlbiIsImNhcnJpbmhvIiwibW9kYWwiLCJjaGVjayIsImFsZXJ0IiwiaWQiLCJjb25maXJtIiwic3RhdHVzIiwidHlwZSIsIm1lc3NhZ2UiLCJhbmd1bGFyIiwibW9kdWxlIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLFNBQVNBLHFCQUFxQkMsRUFBUUMsRUFBY0MsRUFBV0MsR0FDM0RILEVBQU9JLFFBQVcsRUFDbEJKLEVBQU9LLFNBQVcsRUFPbEIsSUFBSUMsSUFDQUMsU0FDSUMsY0FBZUMsYUFBYUMsUUFBUSxTQUNwQ0MsS0FBTUYsYUFBYUMsUUFBUSxTQU9uQ1YsR0FBT1ksS0FBTyxXQUNWVCxFQUNLVSxJQUFJQyxFQUFFLG9CQUFvQkMsS0FBSyxXQUFhLGlCQUFtQmYsRUFBT0ksUUFBVSxVQUFZSixFQUFPSyxTQUFVQyxHQUM3R1UsS0FBSyxTQUFVQyxHQUNaakIsRUFBT2tCLE9BQVVELEVBQVcsS0FDNUJqQixFQUFPbUIsTUFBUyxDQUloQixLQUFLLEdBRkRDLEdBQVUsR0FBSUMsT0FFVEMsRUFBRSxFQUFHQSxHQUFLTCxFQUFPTSxLQUFLQyxVQUFXRixJQUN0Q0YsRUFBUUssS0FBS0gsRUFHakJ0QixHQUFPb0IsUUFBVUEsRUFFakJOLEVBQUUsMkJBQTJCWSxhQU96QzFCLEVBQU8yQixLQUFPLFNBQVVDLEdBQ3BCNUIsRUFBTzRCLFNBQVdBLEVBRWxCZCxFQUFFLGNBQWNlLE1BQU0sU0FNMUI3QixFQUFPOEIsTUFBUSxTQUFVRixHQUNyQjVCLEVBQU80QixTQUFXQSxFQUVsQkcsTUFBTSx3QkFRVi9CLEVBQUFBLFVBQWdCLFNBQVVnQyxHQUNsQkMsUUFBUSxnRkFDUjlCLEVBQUFBLFVBQ1lXLEVBQUUsb0JBQW9CQyxLQUFLLFdBQWEsWUFBY2lCLEVBQUkxQixHQUNqRVUsS0FBSyxTQUFVTyxHQUNPLEtBQWZBLEVBQUtXLFFBQ0xsQyxFQUFPa0MsUUFDSEMsS0FBTSxVQUNOQyxRQUFTLGtDQUdicEMsRUFBT1ksUUFFUFosRUFBT2tDLFFBQ0hDLEtBQU0sU0FDTkMsUUFBUywwREFRckNDLFFBQ0tDLE9BQU8sbUJBQW9CLFVBQVcsdUJBRXRDaEMsUUFBUSxpQkFBa0IsU0FBVWlDLEdBQ2pDQSxFQUNLQyxLQUFLLGNBQ0ZDLFlBQWEsK0JBQ2JDLFdBQVksd0JBRWZGLEtBQUssd0JBQ0ZDLFlBQWEsNkJBQ2JDLFdBQVksd0JBRWZGLEtBQUsseUJBQ0ZDLFlBQWEsOEJBQ2JDLFdBQVksMkJBS3ZCQSxXQUFXLHVCQUF3QixTQUFVLGVBQWdCLFlBQWEsUUFBUyxhQUFjM0MiLCJmaWxlIjoibW9kdWxlcy9jYXJyaW5ob3MvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIENhcnJpbmhvc0NvbnRyb2xsZXIgKCRzY29wZSwgJHJvdXRlUGFyYW1zLCAkbG9jYXRpb24sICRodHRwKSB7XG4gICAgJHNjb3BlLmN1clBhZ2UgID0gMTtcbiAgICAkc2NvcGUucGFnZVNpemUgPSAxMjtcblxuICAgIC8qKlxuICAgICAqIEdlbmVyYWwgY29uZmlnXG4gICAgICpcbiAgICAgKiBAdHlwZSB7e2hlYWRlcnM6IHtBdXRob3JpemF0aW9uLCBTaXRlfX19XG4gICAgICovXG4gICAgdmFyIGNvbmZpZyA9IHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyksXG4gICAgICAgICAgICBTaXRlOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2l0ZScpXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2FycmVnYXIgQ2FycmluaG9zXG4gICAgICovXG4gICAgJHNjb3BlLmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICRodHRwXG4gICAgICAgICAgICAuZ2V0KCQoJ21ldGFbbmFtZT1cImFwaVwiXScpLmF0dHIoJ2NvbnRlbnQnKSArICdjYXJyaW5obz9wYWdlPScgKyAkc2NvcGUuY3VyUGFnZSArICcmbGltaXQ9JyArICRzY29wZS5wYWdlU2l6ZSwgY29uZmlnKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5saW5oYXMgPSAocmVzdWx0LmRhdGEpO1xuICAgICAgICAgICAgICAgICRzY29wZS50b3RhbCAgPSAwLjAwO1xuXG4gICAgICAgICAgICAgICAgdmFyIHBhZ2luYXMgPSBuZXcgQXJyYXkoKTtcblxuICAgICAgICAgICAgICAgIGZvciAodmFyIGk9MTsgaSA8PSByZXN1bHQuZGF0YS5wYWdlQ291bnQ7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmFzLnB1c2goaSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2luYXMgPSBwYWdpbmFzO1xuXG4gICAgICAgICAgICAgICAgJCgnW2RhdGEtdG9nZ2xlPVwidG9vbHRpcFwiXScpLnRvb2x0aXAoKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBWaXN1YWxpemFyIENhcnJpbmhvXG4gICAgICovXG4gICAgJHNjb3BlLm9wZW4gPSBmdW5jdGlvbiAoY2FycmluaG8pIHtcbiAgICAgICAgJHNjb3BlLmNhcnJpbmhvID0gY2FycmluaG87XG5cbiAgICAgICAgJCgnI2NhcnRNb2RhbCcpLm1vZGFsKCdzaG93Jyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEF0dWFsaXphciBDYXJyaW5ob1xuICAgICAqL1xuICAgICRzY29wZS5jaGVjayA9IGZ1bmN0aW9uIChjYXJyaW5obykge1xuICAgICAgICAkc2NvcGUuY2FycmluaG8gPSBjYXJyaW5obztcblxuICAgICAgICBhbGVydCgnY2FycmluaG8gYXR1YWxpemFkbycpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBcGFnYXIgQ2FycmluaG9cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqL1xuICAgICRzY29wZS5kZWxldGUgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgaWYgKGNvbmZpcm0oJ1ZvY8OqIGRlc2VqYSByZWFsbWVudGUgYXBhZ2FyIG8gY2FycmluaG8/XFxuRXN0ZSBwcm9jZWRpbWVudG8gw6kgaXJyZXZlcnPDrXZlbCEnKSkge1xuICAgICAgICAgICAgJGh0dHBcbiAgICAgICAgICAgICAgICAuZGVsZXRlKCQoJ21ldGFbbmFtZT1cImFwaVwiXScpLmF0dHIoJ2NvbnRlbnQnKSArICdjYXJyaW5oby8nICsgaWQsIGNvbmZpZylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT0gMjA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnY2FycmluaG8gcmVtb3ZpZG8gY29tIHN1Y2Vzc28hJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RhbmdlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Vycm8gcmVtb3ZlbmRvIGNhcnJpbmhvLCB0ZW50ZSBub3ZhbWVudGUgbWFpcyB0YXJkZSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdteUFwcC5jYXJyaW5ob3MnLCBbJ25nUm91dGUnLCAnYW5ndWxhci1jbG91ZGluYXJ5J10pXG5cbiAgICAuY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCBmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAgICAgJHJvdXRlUHJvdmlkZXJcbiAgICAgICAgICAgIC53aGVuKCcvY2FycmluaG9zJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9jYXJyaW5ob3MvaW5kZXguaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0NhcnJpbmhvc0NvbnRyb2xsZXInXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndoZW4oJy9jYXJyaW5ob3MvYWRpY2lvbmFyJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9jYXJyaW5ob3MvYWRkLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdDYXJyaW5ob3NDb250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53aGVuKCcvY2FycmluaG9zL2VkaXRhci86aWQnLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdtb2R1bGVzL2NhcnJpbmhvcy9lZGl0Lmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdDYXJyaW5ob3NDb250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgO1xuICAgIH1dKVxuXG4gICAgLmNvbnRyb2xsZXIoJ0NhcnJpbmhvc0NvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm91dGVQYXJhbXMnLCAnJGxvY2F0aW9uJywgJyRodHRwJywgJ2Nsb3VkaW5hcnknLCBDYXJyaW5ob3NDb250cm9sbGVyXSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
