"use strict";function ParceirosController(e,a,r,t,o){e.curPage=1,e.pageSize=12,e.load=function(){t.get($('meta[name="api"]').attr("content")+"parceiro?page="+e.curPage+"&limit="+e.pageSize).then(function(a){e.linhas=a.data})},e.add=function(){o.upload({url:$('meta[name="api"]').attr("content")+"parceiro",data:e.parceiro}).then(function(a){r.url("/parceiros"),e.load()},function(a){e.status={type:"danger",message:"Erro cadastrando parceiro, tente novamente mais tarde"}},function(e){var a=parseInt(100*e.loaded/e.total);console.log("progress: "+a+"% "+e.config.data.file.name)})},e["delete"]=function(a){if(confirm("Você deseja realmente apagar o parceiro?\nEste procedimento é irreversível!")){var o=e.linhas.data[a];t["delete"]($('meta[name="api"]').attr("content")+"parceiro/"+o._id).then(function(a){204==a.status?(e.status={type:"success",message:"Parceiro removido com sucesso!"},r.path("/parceiros"),e.load()):e.status={type:"danger",message:"Erro removendo parceiro, tente novamente mais tarde"}})}},e.edit=function(){t.put($('meta[name="api"]').attr("content")+"parceiro/"+a.id,e.parceiro).success(function(a){e.status={type:"success",message:"Parceiro atualizado com sucesso!"}}).error(function(){e.status={type:"danger",message:"Ocorreu um erro atualizando os dados do parceiro, tente novamente mais tarde"}})},e.get=function(){t.get($('meta[name="api"]').attr("content")+"parceiro/"+a.id).then(function(a){e.parceiro=a.data.data})}}angular.module("myApp.parceiros",["ngRoute","ngFileUpload"]).config(["$routeProvider",function(e){e.when("/parceiros",{templateUrl:"modules/parceiros/index.html",controller:"ParceirosController"}).when("/parceiros/adicionar",{templateUrl:"modules/parceiros/add.html",controller:"ParceirosController"}).when("/parceiros/editar/:id",{templateUrl:"modules/parceiros/edit.html",controller:"ParceirosController"})}]).controller("ParceirosController",["$scope","$routeParams","$location","$http","Upload",ParceirosController]);
//# sourceMappingURL=data:application/json;base64,
