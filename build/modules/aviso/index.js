"use strict";angular.module("myApp.aviso",["ngRoute"]).config(["$routeProvider",function(e){e.when("/aviso",{templateUrl:"modules/aviso/index.html",controller:"AvisoController"}).when("/aviso/adicionar",{templateUrl:"modules/aviso/add.html",controller:"AvisoController"}).when("/aviso/editar/:id",{templateUrl:"modules/aviso/edit.html",controller:"AvisoController"})}]).controller("AvisoController",["$scope","$routeParams","$location","api",function(e,a,t,o){e.curPage=1,e.pageSize=12,e.load=function(){o.get("aviso?page="+e.curPage+"&limit="+e.pageSize).then(function(a){e.linhas=a.data})},e.add=function(){o.post("aviso",e.aviso).then(function(a,t){e.status={type:"success",message:"inserida com sucesso!"},e.aviso="",e.avisoForm.$setPristine()})},e["delete"]=function(a){confirm("Você deseja realmente apagar o ítem?\nEste procedimento é irreversível!")&&o["delete"]("aviso/"+a).then(function(a){204==a.status?(e.status={type:"success",message:"removida com sucesso!"},t.path("/aviso"),e.load()):e.status={type:"danger",message:"Erro removendo, tente novamente mais tarde"}})},e.edit=function(){o.put("aviso/"+a.id,e.aviso).success(function(a){e.status={type:"success",message:"atualizada com sucesso!"}}).error(function(){e.status={type:"danger",message:"Ocorreu um erro atualizando, tente novamente mais tarde"}})},e.get=function(){o.get("aviso/"+a.id).then(function(a){a.data.data.inicio=new Date(a.data.data.inicio),a.data.data.fim=new Date(a.data.data.fim),e.aviso=a.data.data})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvYXZpc28vaW5kZXguanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRyb3V0ZVBhcmFtcyIsIiRsb2NhdGlvbiIsImFwaSIsImN1clBhZ2UiLCJwYWdlU2l6ZSIsImxvYWQiLCJnZXQiLCJ0aGVuIiwicmVzdWx0IiwibGluaGFzIiwiYWRkIiwicG9zdCIsImF2aXNvIiwiZGF0YSIsInN0YXR1cyIsInR5cGUiLCJtZXNzYWdlIiwiYXZpc29Gb3JtIiwiJHNldFByaXN0aW5lIiwiaWQiLCJjb25maXJtIiwicGF0aCIsImVkaXQiLCJwdXQiLCJzdWNjZXNzIiwiZXJyb3IiLCJpbmljaW8iLCJEYXRlIiwiZmltIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBQSxTQUFRQyxPQUFPLGVBQWdCLFlBQzFCQyxRQUFRLGlCQUFrQixTQUFVQyxHQUNqQ0EsRUFDS0MsS0FBSyxVQUNGQyxZQUFhLDJCQUNiQyxXQUFZLG9CQUVmRixLQUFLLG9CQUNGQyxZQUFhLHlCQUNiQyxXQUFZLG9CQUVmRixLQUFLLHFCQUNGQyxZQUFhLDBCQUNiQyxXQUFZLHVCQUt2QkEsV0FBVyxtQkFBb0IsU0FBVSxlQUFnQixZQUFhLE1BQ25FLFNBQVVDLEVBQVFDLEVBQWNDLEVBQVdDLEdBQ3ZDSCxFQUFPSSxRQUFVLEVBQ2pCSixFQUFPSyxTQUFXLEdBRWxCTCxFQUFPTSxLQUFPLFdBQ1ZILEVBQ0tJLElBQUksY0FBZ0JQLEVBQU9JLFFBQVUsVUFBWUosRUFBT0ssVUFDeERHLEtBQUssU0FBVUMsR0FDWlQsRUFBT1UsT0FBVUQsRUFBVyxRQUl4Q1QsRUFBT1csSUFBTSxXQUNUUixFQUNLUyxLQUFLLFFBQVNaLEVBQU9hLE9BQ3JCTCxLQUFLLFNBQVVNLEVBQU1DLEdBQ2xCZixFQUFPZSxRQUNIQyxLQUFNLFVBQ05DLFFBQVMseUJBR2JqQixFQUFPYSxNQUFRLEdBQ2ZiLEVBQU9rQixVQUFVQyxrQkFJN0JuQixFQUFBQSxVQUFnQixTQUFVb0IsR0FDbEJDLFFBQVEsNEVBQ1JsQixFQUFBQSxVQUNZLFNBQVdpQixHQUNsQlosS0FBSyxTQUFVTSxHQUNPLEtBQWZBLEVBQUtDLFFBQ0xmLEVBQU9lLFFBQ0hDLEtBQU0sVUFDTkMsUUFBUyx5QkFHYmYsRUFBVW9CLEtBQUssVUFFZnRCLEVBQU9NLFFBRVBOLEVBQU9lLFFBQ0hDLEtBQU0sU0FDTkMsUUFBUyxpREFPakNqQixFQUFPdUIsS0FBTyxXQUNWcEIsRUFDS3FCLElBQUksU0FBV3ZCLEVBQWFtQixHQUFJcEIsRUFBT2EsT0FDdkNZLFFBQVEsU0FBVVgsR0FDZmQsRUFBT2UsUUFDSEMsS0FBTSxVQUNOQyxRQUFTLDZCQUdoQlMsTUFBTSxXQUNIMUIsRUFBT2UsUUFDSEMsS0FBTSxTQUNOQyxRQUFTLDhEQUt6QmpCLEVBQU9PLElBQU0sV0FDVEosRUFDS0ksSUFBSSxTQUFXTixFQUFhbUIsSUFDNUJaLEtBQUssU0FBVU0sR0FDWkEsRUFBS0EsS0FBS0EsS0FBS2EsT0FBUyxHQUFJQyxNQUFLZCxFQUFLQSxLQUFLQSxLQUFLYSxRQUNoRGIsRUFBS0EsS0FBS0EsS0FBS2UsSUFBTSxHQUFJRCxNQUFLZCxFQUFLQSxLQUFLQSxLQUFLZSxLQUU3QzdCLEVBQU9hLE1BQVNDLEVBQUtBLEtBQVMiLCJmaWxlIjoibW9kdWxlcy9hdmlzby9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ215QXBwLmF2aXNvJywgWyduZ1JvdXRlJ10pXG4gICAgLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAgICAgICAud2hlbignL2F2aXNvJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9hdmlzby9pbmRleC5odG1sJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnQXZpc29Db250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53aGVuKCcvYXZpc28vYWRpY2lvbmFyJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9hdmlzby9hZGQuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0F2aXNvQ29udHJvbGxlcidcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbignL2F2aXNvL2VkaXRhci86aWQnLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdtb2R1bGVzL2F2aXNvL2VkaXQuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0F2aXNvQ29udHJvbGxlcidcbiAgICAgICAgICAgIH0pXG4gICAgICAgIDtcbiAgICB9XSlcblxuICAgIC5jb250cm9sbGVyKCdBdmlzb0NvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm91dGVQYXJhbXMnLCAnJGxvY2F0aW9uJywgJ2FwaScsXG4gICAgICAgIGZ1bmN0aW9uICgkc2NvcGUsICRyb3V0ZVBhcmFtcywgJGxvY2F0aW9uLCBhcGkpIHtcbiAgICAgICAgICAgICRzY29wZS5jdXJQYWdlID0gMTtcbiAgICAgICAgICAgICRzY29wZS5wYWdlU2l6ZSA9IDEyO1xuXG4gICAgICAgICAgICAkc2NvcGUubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBhcGlcbiAgICAgICAgICAgICAgICAgICAgLmdldCgnYXZpc28/cGFnZT0nICsgJHNjb3BlLmN1clBhZ2UgKyAnJmxpbWl0PScgKyAkc2NvcGUucGFnZVNpemUpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5saW5oYXMgPSAocmVzdWx0LmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICRzY29wZS5hZGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgYXBpXG4gICAgICAgICAgICAgICAgICAgIC5wb3N0KCdhdmlzbycsICRzY29wZS5hdmlzbylcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ2luc2VyaWRhIGNvbSBzdWNlc3NvISdcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5hdmlzbyA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmF2aXNvRm9ybS4kc2V0UHJpc3RpbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAkc2NvcGUuZGVsZXRlID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ1ZvY8OqIGRlc2VqYSByZWFsbWVudGUgYXBhZ2FyIG8gw610ZW0/XFxuRXN0ZSBwcm9jZWRpbWVudG8gw6kgaXJyZXZlcnPDrXZlbCEnKSkge1xuICAgICAgICAgICAgICAgICAgICBhcGlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kZWxldGUoJ2F2aXNvLycgKyBpZClcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09IDIwNCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ3JlbW92aWRhIGNvbSBzdWNlc3NvISdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvYXZpc28nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvIHJlbW92ZW5kbywgdGVudGUgbm92YW1lbnRlIG1haXMgdGFyZGUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAkc2NvcGUuZWRpdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBhcGlcbiAgICAgICAgICAgICAgICAgICAgLnB1dCgnYXZpc28vJyArICRyb3V0ZVBhcmFtcy5pZCwgJHNjb3BlLmF2aXNvKVxuICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ2F0dWFsaXphZGEgY29tIHN1Y2Vzc28hJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2NvcnJldSB1bSBlcnJvIGF0dWFsaXphbmRvLCB0ZW50ZSBub3ZhbWVudGUgbWFpcyB0YXJkZSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAkc2NvcGUuZ2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGFwaVxuICAgICAgICAgICAgICAgICAgICAuZ2V0KCdhdmlzby8nICsgJHJvdXRlUGFyYW1zLmlkKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5kYXRhLmRhdGEuaW5pY2lvID0gbmV3IERhdGUoZGF0YS5kYXRhLmRhdGEuaW5pY2lvKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuZGF0YS5kYXRhLmZpbSA9IG5ldyBEYXRlKGRhdGEuZGF0YS5kYXRhLmZpbSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5hdmlzbyA9IChkYXRhLmRhdGEuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
