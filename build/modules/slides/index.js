"use strict";function SlidesController(e,t,o,a,s){e.curPage=1,e.pageSize=12;var n={headers:{Authorization:localStorage.getItem("token"),Site:localStorage.getItem("site")}};e.load=function(){a.get($('meta[name="api"]').attr("content")+"slide?page="+e.curPage+"&limit="+e.pageSize,n).then(function(t){e.linhas=t.data})},e.upload=function(){var t=e.produto;s.upload(t.imagem[0],{}).then(function(o){t.imagem=o.data,e.add(t)})},e.add=function(){var t=e.produto;a.post($('meta[name="api"]').attr("content")+"slide",t,n).then(function(t){201===t.status?(e.status={type:"success",message:"Slide inserido com sucesso"},e.produto="",e.produtoForm.$setPristine()):(e.status={type:"danger",message:"Erro cadastrando slide, tente novamente mais tarde"},console.error(t))})},e["delete"]=function(t){confirm("Você deseja realmente apagar o slide?\nEste procedimento é irreversível!")&&a["delete"]($('meta[name="api"]').attr("content")+"slide/"+t,n).then(function(t){204==t.status?(e.status={type:"success",message:"Slide removido com sucesso!"},o.path("/slides"),e.load()):e.status={type:"danger",message:"Erro removendo slide, tente novamente mais tarde"}})},e.edit=function(){a.put($('meta[name="api"]').attr("content")+"slide/"+t.id,e.produto,n).success(function(t){e.status={type:"success",message:"produto atualizado com sucesso!"}}).error(function(){e.status={type:"danger",message:"Ocorreu um erro atualizando os dados do slide, tente novamente mais tarde"}})},e.get=function(){a.get($('meta[name="api"]').attr("content")+"slide/"+t.id,n).then(function(t){e.produto=t.data.data})}}angular.module("myApp.slides",["ngRoute","ngFileUpload"]).config(["$routeProvider",function(e){e.when("/slides",{templateUrl:"modules/slides/index.html",controller:"SlidesController"}).when("/slides/adicionar",{templateUrl:"modules/slides/add.html",controller:"SlidesController"}).when("/slides/editar/:id",{templateUrl:"modules/slides/edit.html",controller:"SlidesController"})}]).controller("SlidesController",["$scope","$routeParams","$location","$http","Upload",SlidesController]);
//# sourceMappingURL=data:application/json;base64,
