"use strict";function EquipeController(e,t,a,o,n){e.curPage=1,e.pageSize=12,e.pageTitle="Equipe",e.load=function(){var t=$('meta[name="api"]').attr("content")+"equipe?page="+e.curPage+"&limit="+e.pageSize;o.get(t).then(function(t){e.linhas=t.data})},e.add=function(){var t=e.membro;n.upload({url:$('meta[name="api"]').attr("content")+"equipe",data:t}).then(function(t){a.url("/equipe"),e.load()},function(t){e.status={type:"danger",message:"Erro cadastrando membro, tente novamente mais tarde"}},function(e){var t=parseInt(100*e.loaded/e.total);console.log("progress: "+t+"% "+e.config.data.file.name)})},e["delete"]=function(t){confirm("Você deseja realmente apagar o membro?\nEste procedimento é irreversível!")&&o["delete"]($('meta[name="api"]').attr("content")+"equipe/"+t).then(function(t){204==t.status?(e.status={type:"success",message:"Membro removido com sucesso!"},a.path("/equipe"),e.load()):e.status={type:"danger",message:"Erro removendo membro, tente novamente mais tarde"}})},e.edit=function(){o.put($('meta[name="api"]').attr("content")+"equipe/"+t.id,e.membro).success(function(t){e.status={type:"success",message:"Membro atualizado com sucesso!"}}).error(function(){e.status={type:"danger",message:"Ocorreu um erro atualizando os dados do membro, tente novamente mais tarde"}})},e.get=function(){o.get($('meta[name="api"]').attr("content")+"equipe/"+t.id).then(function(t){e.membro=t.data.data})}}angular.module("myApp.equipe",["ngRoute","ngFileUpload"]).config(["$routeProvider",function(e){e.when("/equipe",{templateUrl:"modules/equipe/index.html",controller:"EquipeController"}).when("/equipe/adicionar",{templateUrl:"modules/equipe/add.html",controller:"EquipeController"}).when("/equipe/editar/:id",{templateUrl:"modules/equipe/edit.html",controller:"EquipeController"})}]).controller("EquipeController",["$scope","$routeParams","$location","$http","Upload",EquipeController]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVxdWlwZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJFcXVpcGVDb250cm9sbGVyIiwiJHNjb3BlIiwiJHJvdXRlUGFyYW1zIiwiJGxvY2F0aW9uIiwiJGh0dHAiLCIkdXBsb2FkIiwiY3VyUGFnZSIsInBhZ2VTaXplIiwicGFnZVRpdGxlIiwibG9hZCIsInVybCIsIiQiLCJhdHRyIiwiZ2V0IiwidGhlbiIsImRhdGEiLCJsaW5oYXMiLCJhZGQiLCIkbWVtYnJvIiwibWVtYnJvIiwidXBsb2FkIiwicmVzcCIsInN0YXR1cyIsInR5cGUiLCJtZXNzYWdlIiwiZXZ0IiwicHJvZ3Jlc3NQZXJjZW50YWdlIiwicGFyc2VJbnQiLCJsb2FkZWQiLCJ0b3RhbCIsImNvbnNvbGUiLCJsb2ciLCJjb25maWciLCJmaWxlIiwibmFtZSIsImlkIiwiY29uZmlybSIsInBhdGgiLCJlZGl0IiwicHV0Iiwic3VjY2VzcyIsImVycm9yIiwiYW5ndWxhciIsIm1vZHVsZSIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciJdLCJtYXBwaW5ncyI6IkFBQUEsWUFhQSxTQUFTQSxrQkFBa0JDLEVBQVFDLEVBQWNDLEVBQVdDLEVBQU9DLEdBQy9ESixFQUFPSyxRQUFZLEVBQ25CTCxFQUFPTSxTQUFZLEdBQ25CTixFQUFPTyxVQUFZLFNBS25CUCxFQUFPUSxLQUFPLFdBQ1YsR0FBSUMsR0FBTUMsRUFBRSxvQkFBb0JDLEtBQUssV0FBYSxlQUFpQlgsRUFBT0ssUUFBVSxVQUFZTCxFQUFPTSxRQUV2R0gsR0FDS1MsSUFBSUgsR0FDSkksS0FBSyxTQUFVQyxHQUNaZCxFQUFPZSxPQUFVRCxFQUFTLFFBT3RDZCxFQUFPZ0IsSUFBTSxXQUNULEdBQUlDLEdBQVVqQixFQUFPa0IsTUFFckJkLEdBQ0tlLFFBQ0dWLElBQUtDLEVBQUUsb0JBQW9CQyxLQUFLLFdBQWEsU0FDN0NHLEtBQU1HLElBRVRKLEtBQ0csU0FBVU8sR0FDTmxCLEVBQVVPLElBQUksV0FDZFQsRUFBT1EsUUFFWCxTQUFVWSxHQUNOcEIsRUFBT3FCLFFBQ0hDLEtBQU0sU0FDTkMsUUFBUyx3REFHakIsU0FBVUMsR0FDTixHQUFJQyxHQUFxQkMsU0FBUyxJQUFRRixFQUFJRyxPQUFTSCxFQUFJSSxNQUUzREMsU0FBUUMsSUFBSSxhQUFlTCxFQUFxQixLQUFPRCxFQUFJTyxPQUFPakIsS0FBS2tCLEtBQUtDLFNBVTVGakMsRUFBQUEsVUFBZ0IsU0FBVWtDLEdBQ2xCQyxRQUFRLDhFQUNSaEMsRUFBQUEsVUFDWU8sRUFBRSxvQkFBb0JDLEtBQUssV0FBYSxVQUFZdUIsR0FDM0RyQixLQUFLLFNBQVVDLEdBQ08sS0FBZkEsRUFBS08sUUFDTHJCLEVBQU9xQixRQUNIQyxLQUFNLFVBQ05DLFFBQVMsZ0NBR2JyQixFQUFVa0MsS0FBSyxXQUNmcEMsRUFBT1EsUUFFUFIsRUFBT3FCLFFBQ0hDLEtBQU0sU0FDTkMsUUFBUyx3REFVakN2QixFQUFPcUMsS0FBTyxXQUNWbEMsRUFDS21DLElBQUk1QixFQUFFLG9CQUFvQkMsS0FBSyxXQUFhLFVBQVlWLEVBQWFpQyxHQUFJbEMsRUFBT2tCLFFBQ2hGcUIsUUFBUSxTQUFVekIsR0FDZmQsRUFBT3FCLFFBQ0hDLEtBQU0sVUFDTkMsUUFBUyxvQ0FHaEJpQixNQUFNLFdBQ0h4QyxFQUFPcUIsUUFDSEMsS0FBTSxTQUNOQyxRQUFTLGlGQVF6QnZCLEVBQU9ZLElBQU0sV0FDVFQsRUFDS1MsSUFBSUYsRUFBRSxvQkFBb0JDLEtBQUssV0FBYSxVQUFZVixFQUFhaUMsSUFDckVyQixLQUFLLFNBQVVDLEdBQ1pkLEVBQU9rQixPQUFVSixFQUFLQSxLQUFTLFFBSy9DMkIsUUFDS0MsT0FBTyxnQkFBaUIsVUFBVyxpQkFFbkNYLFFBQVEsaUJBQWtCLFNBQVVZLEdBQ2pDQSxFQUNLQyxLQUFLLFdBQ0ZDLFlBQWEsNEJBQ2JDLFdBQVkscUJBRWZGLEtBQUsscUJBQ0ZDLFlBQWEsMEJBQ2JDLFdBQVkscUJBRWZGLEtBQUssc0JBQ0ZDLFlBQWEsMkJBQ2JDLFdBQVksd0JBS3ZCQSxXQUFXLG9CQUFxQixTQUFVLGVBQWdCLFlBQWEsUUFBUyxTQUFVL0MiLCJmaWxlIjoiZXF1aXBlL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEVxdWlwZVxuICogXG4gKiBAcGFyYW0gJHNjb3BlXG4gKiBAcGFyYW0gJHJvdXRlUGFyYW1zXG4gKiBAcGFyYW0gJGxvY2F0aW9uXG4gKiBAcGFyYW0gJGh0dHBcbiAqIEBwYXJhbSBVcGxvYWRcbiAqIFxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIEVxdWlwZUNvbnRyb2xsZXIgKCRzY29wZSwgJHJvdXRlUGFyYW1zLCAkbG9jYXRpb24sICRodHRwLCAkdXBsb2FkKSB7XG4gICAgJHNjb3BlLmN1clBhZ2UgICA9IDE7XG4gICAgJHNjb3BlLnBhZ2VTaXplICA9IDEyO1xuICAgICRzY29wZS5wYWdlVGl0bGUgPSAnRXF1aXBlJztcblxuICAgIC8qKlxuICAgICAqIENhcnJlZ2EgRXF1aXBlXG4gICAgICovXG4gICAgJHNjb3BlLmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1cmwgPSAkKCdtZXRhW25hbWU9XCJhcGlcIl0nKS5hdHRyKCdjb250ZW50JykgKyAnZXF1aXBlP3BhZ2U9JyArICRzY29wZS5jdXJQYWdlICsgJyZsaW1pdD0nICsgJHNjb3BlLnBhZ2VTaXplO1xuXG4gICAgICAgICRodHRwXG4gICAgICAgICAgICAuZ2V0KHVybClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmxpbmhhcyA9IChkYXRhLmRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFkaWNpb25hIG1lbWJyb1xuICAgICAqL1xuICAgICRzY29wZS5hZGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkbWVtYnJvID0gJHNjb3BlLm1lbWJybztcblxuICAgICAgICAkdXBsb2FkXG4gICAgICAgICAgICAudXBsb2FkKHtcbiAgICAgICAgICAgICAgICB1cmw6ICQoJ21ldGFbbmFtZT1cImFwaVwiXScpLmF0dHIoJ2NvbnRlbnQnKSArICdlcXVpcGUnLFxuICAgICAgICAgICAgICAgIGRhdGE6ICRtZW1icm9cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAocmVzcCkge1xuICAgICAgICAgICAgICAgICAgICAkbG9jYXRpb24udXJsKCcvZXF1aXBlJyk7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5sb2FkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAocmVzcCkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RhbmdlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRXJybyBjYWRhc3RyYW5kbyBtZW1icm8sIHRlbnRlIG5vdmFtZW50ZSBtYWlzIHRhcmRlJ1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJvZ3Jlc3NQZXJjZW50YWdlID0gcGFyc2VJbnQoMTAwLjAgKiBldnQubG9hZGVkIC8gZXZ0LnRvdGFsKTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncHJvZ3Jlc3M6ICcgKyBwcm9ncmVzc1BlcmNlbnRhZ2UgKyAnJSAnICsgZXZ0LmNvbmZpZy5kYXRhLmZpbGUubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIG1lbWJybyBkYSBFcXVpcGVcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqL1xuICAgICRzY29wZS5kZWxldGUgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgaWYgKGNvbmZpcm0oJ1ZvY8OqIGRlc2VqYSByZWFsbWVudGUgYXBhZ2FyIG8gbWVtYnJvP1xcbkVzdGUgcHJvY2VkaW1lbnRvIMOpIGlycmV2ZXJzw612ZWwhJykpIHtcbiAgICAgICAgICAgICRodHRwXG4gICAgICAgICAgICAgICAgLmRlbGV0ZSgkKCdtZXRhW25hbWU9XCJhcGlcIl0nKS5hdHRyKCdjb250ZW50JykgKyAnZXF1aXBlLycgKyBpZClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT0gMjA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTWVtYnJvIHJlbW92aWRvIGNvbSBzdWNlc3NvISdcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvZXF1aXBlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRXJybyByZW1vdmVuZG8gbWVtYnJvLCB0ZW50ZSBub3ZhbWVudGUgbWFpcyB0YXJkZSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEVkaXRhIG1lbWJyb1xuICAgICAqL1xuICAgICRzY29wZS5lZGl0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkaHR0cFxuICAgICAgICAgICAgLnB1dCgkKCdtZXRhW25hbWU9XCJhcGlcIl0nKS5hdHRyKCdjb250ZW50JykgKyAnZXF1aXBlLycgKyAkcm91dGVQYXJhbXMuaWQsICRzY29wZS5tZW1icm8pXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ01lbWJybyBhdHVhbGl6YWRvIGNvbSBzdWNlc3NvISdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jb3JyZXUgdW0gZXJybyBhdHVhbGl6YW5kbyBvcyBkYWRvcyBkbyBtZW1icm8sIHRlbnRlIG5vdmFtZW50ZSBtYWlzIHRhcmRlJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBWaXN1YWxpemEgbWVtYnJvXG4gICAgICovXG4gICAgJHNjb3BlLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJGh0dHBcbiAgICAgICAgICAgIC5nZXQoJCgnbWV0YVtuYW1lPVwiYXBpXCJdJykuYXR0cignY29udGVudCcpICsgJ2VxdWlwZS8nICsgJHJvdXRlUGFyYW1zLmlkKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUubWVtYnJvID0gKGRhdGEuZGF0YS5kYXRhKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdteUFwcC5lcXVpcGUnLCBbJ25nUm91dGUnLCAnbmdGaWxlVXBsb2FkJ10pXG5cbiAgICAuY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCBmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAgICAgJHJvdXRlUHJvdmlkZXJcbiAgICAgICAgICAgIC53aGVuKCcvZXF1aXBlJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9lcXVpcGUvaW5kZXguaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0VxdWlwZUNvbnRyb2xsZXInXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndoZW4oJy9lcXVpcGUvYWRpY2lvbmFyJywge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9lcXVpcGUvYWRkLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdFcXVpcGVDb250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53aGVuKCcvZXF1aXBlL2VkaXRhci86aWQnLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdtb2R1bGVzL2VxdWlwZS9lZGl0Lmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdFcXVpcGVDb250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgO1xuICAgIH1dKVxuXG4gICAgLmNvbnRyb2xsZXIoJ0VxdWlwZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm91dGVQYXJhbXMnLCAnJGxvY2F0aW9uJywgJyRodHRwJywgJ1VwbG9hZCcsIEVxdWlwZUNvbnRyb2xsZXJdKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
